buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.12'
    }
}

plugins {
    id 'scala'
    id 'application'
}

apply plugin: 'com.google.protobuf'

repositories {
    jcenter()
}

dependencies {
    implementation 'org.scala-lang:scala-library:2.13.4'
    implementation 'com.linecorp.armeria:armeria-grpc:1.3.0'
    implementation 'com.linecorp.armeria:armeria-scalapb_2.13:1.3.0'
    implementation "com.thesamet.scalapb:scalapb-runtime_2.13:0.10.9"
    implementation "com.thesamet.scalapb:scalapb-runtime-grpc_2.13:0.10.9"
    implementation "io.projectreactor:reactor-scala-extensions_2.13:0.8.0"
    implementation "com.salesforce.servicelibs:reactor-grpc-stub:1.0.1"

    testImplementation "org.scalameta:munit_2.13:0.7.19"
    runtimeOnly 'org.slf4j:slf4j-simple:1.7.30'
}

application {
    mainClassName = 'example.armeria.Main'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.12.0"
    }

    plugins {
        def isWindows = org.gradle.internal.os.OperatingSystem.current() == org.gradle.internal.os.OperatingSystem.WINDOWS
        def artifactName = "kr.ikhoon.scalapb-reactor:protoc-gen-scalapb-reactor:0.1.0-SNAPSHOT:"
        artifactName += isWindows ? "windows@bat" : "unix@sh"
        scalapb {
            artifact = artifactName
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                scalapb {
                    option 'grpc'
                }
            }
        }
    }
}

sourceSets {
    main {
        scala {
            srcDirs "${protobuf.generatedFilesBaseDir}/main/scalapb"
        }
    }
}
